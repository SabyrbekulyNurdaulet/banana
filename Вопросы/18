# **18.Объясните, как работает функция map**

Функция `map()` в Python применяет указанную функцию к каждому элементу итерируемого объекта (например, списку) и возвращает объект-генератор с результатами применения этой функции.

Синтаксис функции `map()`:

```python
map(function, iterable, ...)

```

- `function`: Функция, которая будет применена к каждому элементу итерируемого объекта.
- `iterable`: Итерируемый объект, элементы которого будут переданы в функцию.

Пример использования функции `map()`:

```python
# Функция, которая возвращает квадрат числа
def square(x):
    return x ** 2

# Применение функции square к каждому элементу списка
numbers = [1, 2, 3, 4, 5]
squared_numbers = map(square, numbers)

# Вывод результатов
print(list(squared_numbers))  # Вывод: [1, 4, 9, 16, 25]

```

В этом примере функция `square()` применяется к каждому элементу списка `numbers` с помощью функции `map()`. Результатом является объект-генератор, содержащий квадраты каждого элемента исходного списка.

Функция `map()` может принимать несколько итерируемых объектов в качестве аргументов. В этом случае, функция, переданная первым аргументом, должна принимать количество аргументов, равное количеству итерируемых объектов, и возвращать результат для каждой комбинации элементов этих объектов.

```python
# Пример с несколькими итерируемыми объектами
def add(x, y):
    return x + y

numbers1 = [1, 2, 3]
numbers2 = [4, 5, 6]
sums = map(add, numbers1, numbers2)

print(list(sums))  # Вывод: [5, 7, 9]

```

В этом примере функция `add()` применяется к каждой паре элементов из списков `numbers1` и `numbers2`, и возвращается объект-генератор с результатами сложения этих пар.
