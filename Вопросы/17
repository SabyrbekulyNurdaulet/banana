# **17. В чем разница между func и func()?**

Разница между `func` и `func()` в Python заключается в том, что `func` представляет собой ссылку на объект функции, тогда как `func()` вызывает эту функцию и возвращает ее результат.

- `func`: Это имя функции как объект. При обращении к нему без круглых скобок, функция не вызывается, а просто возвращается сам объект функции. Это полезно, если вам нужно передать функцию как аргумент в другую функцию или сохранить ее в переменной для последующего вызова.
- `func()`: Это вызов функции с передачей аргументов в круглых скобках. Когда функция вызывается с помощью круглых скобок, Python выполняет код функции и возвращает результат выполнения. Если функция не принимает аргументы, скобки все равно должны быть указаны.

Примеры:

```python
def my_function():
    return "Hello, world!"

# Использование func как ссылки на объект функции
func_ref = my_function
print(func_ref)  # Вывод: <function my_function at 0x0000021AABACF5E0>

# Использование func() для вызова функции
result = my_function()
print(result)  # Вывод: Hello, world!

```

Таким образом, `func` и `func()` имеют разные значения в Python: первый представляет объект функции, а второй вызывает эту функцию и возвращает результат ее выполнения.
