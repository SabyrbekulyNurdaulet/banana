# **29. Как проверить, существует ли значение в списке?**

Чтобы проверить, существует ли определенное значение в списке в Python, можно использовать оператор `in`. Этот оператор возвращает `True`, если значение присутствует в списке, и `False` в противном случае. Вот пример:

```python
my_list = [1, 2, 3, 4, 5]

# Проверка наличия значения в списке
if 3 in my_list:
    print("Значение 3 существует в списке.")
else:
    print("Значение 3 не существует в списке.")

```

Этот код выведет:

```
Значение 3 существует в списке.

```

Также можно использовать оператор `not in`, который возвращает `True`, если значения нет в списке, и `False` в противном случае:

```python
if 6 not in my_list:
    print("Значение 6 не существует в списке.")
else:
    print("Значение 6 существует в списке.")

```

Этот код выведет:

```
Значение 6 не существует в списке.

```

Таким образом, операторы `in` и `not in` предоставляют удобный способ проверки наличия значения в списке в Python.

_________________________

Использование метода 'index'
Можно также использовать метод 'index', который возвращает индекс первого вхождения значения в списке. Если значение отсутствует, метод вызывает исключение 'ValueError'. Чтобы избеджать исключения, можно использовать блок 'try-except'

'''python
my_list = [1,2,3,4,5]
value_to_check = 3

try:
	index = my_list.index(value_to_check)
	print("yes")
except ValueError:
	print("no")
'''

Использование цикла
