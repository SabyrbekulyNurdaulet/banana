# **38. Что может быть ключом в словаре**

В Python ключами в словаре (тип данных `dict`) могут быть любые неизменяемые типы данных. Это означает, что типы данных, которые можно использовать в качестве ключей, должны поддерживать хэширование и не должны изменяться после их создания. Наиболее часто используемые типы данных, которые могут быть ключами в словаре, включают:

1. **Числа (int, float)**:
    
    ```python
    pythonКопировать код
    my_dict = {1: "one", 2: "two", 3.14: "pi"}
    
    ```
    
2. **Строки (str)**:
    
    ```python
    pythonКопировать код
    my_dict = {"name": "Alice", "age": 30}
    
    ```
    
3. **Кортежи (tuple)**, если все элементы кортежа также неизменяемы:
    
    ```python
    pythonКопировать код
    my_dict = {("a", 1): "first", ("b", 2): "second"}
    
    ```
    
4. **Булевы значения (bool)**:
    
    ```python
    pythonКопировать код
    my_dict = {True: "yes", False: "no"}
    
    ```
    

Однако некоторые типы данных не могут быть использованы в качестве ключей, так как они изменяемы и не поддерживают хэширование. Примеры таких типов данных включают списки (list), множества (set) и словари (dict).

### Пример использования разных типов данных в качестве ключей:

```python
pythonКопировать код
# Числа в качестве ключей
num_dict = {1: "one", 2: "two"}

# Строки в качестве ключей
str_dict = {"name": "Alice", "age": 30}

# Кортежи в качестве ключей
tuple_dict = {("x", 1): "point1", ("y", 2): "point2"}

# Булевы значения в качестве ключей
bool_dict = {True: "yes", False: "no"}

print(num_dict)
print(str_dict)
print(tuple_dict)
print(bool_dict)

```

### Пример неправильного использования изменяемых типов данных в качестве ключей:

```python
pythonКопировать код
# Это вызовет ошибку TypeError
try:
    invalid_dict = {[1, 2, 3]: "list"}
except TypeError as e:
    print(f"Ошибка: {e}")

# Это также вызовет ошибку TypeError
try:
    invalid_dict = {{1: "one"}: "dict"}
except TypeError as e:
    print(f"Ошибка: {e}")

```

Таким образом, ключи в словаре должны быть неизменяемыми и хэшируемыми, чтобы гарантировать корректную работу словаря.
