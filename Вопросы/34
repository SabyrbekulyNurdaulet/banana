# 34. [Tkinter. Создание окна приложения](https://metanit.com/python/tutorial/9.1.php). [Кнопки](https://metanit.com/python/tutorial/9.2.php). Позиционирование.

Для создания окна приложения с использованием библиотеки Tkinter в Python и размещения кнопок на нем можно воспользоваться следующим примером кода:

```python
import tkinter as tk

# Создание окна приложения
root = tk.Tk()
root.title("Мое приложение")

# Создание кнопок
button1 = tk.Button(root, text="Кнопка 1")
button2 = tk.Button(root, text="Кнопка 2")
button3 = tk.Button(root, text="Кнопка 3")

# Позиционирование кнопок с использованием менеджера геометрии grid
button1.grid(row=0, column=0, padx=10, pady=10)
button2.grid(row=0, column=1, padx=10, pady=10)
button3.grid(row=1, column=0, columnspan=2, padx=10, pady=10)

# Запуск основного цикла обработки событий
root.mainloop()

```

В этом примере:

- Мы создаем окно приложения с помощью `tk.Tk()`.
- Заголовок окна устанавливается с помощью `root.title("Мое приложение")`.
- Создаются три кнопки с помощью `tk.Button(root, text="...")`.
- Каждая кнопка позиционируется на окне с помощью менеджера геометрии `grid()`, который позволяет размещать элементы в сетке из строк и столбцов. Кнопки позиционируются с использованием параметров `row` (строка) и `column` (столбец). Дополнительно можно задать отступы с помощью параметров `padx` и `pady`.
- Для кнопки `button3` устанавливается параметр `columnspan=2`, чтобы она располагалась в двух столбцах.
- После настройки всех элементов приложения запускается основной цикл обработки событий с помощью `root.mainloop()`, который ждет действий пользователя.

Это простой пример создания окна приложения с кнопками с использованием библиотеки Tkinter. Менеджер геометрии `grid()` обеспечивает гибкость в позиционировании элементов на окне.
